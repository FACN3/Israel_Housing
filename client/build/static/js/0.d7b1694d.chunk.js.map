{"version":3,"sources":["../static/js/0.d7b1694d.chunk.js","../../node_modules/env2/lib/env.js","../node_modules/path-browserify/index.js","../../node_modules/env2/package.json"],"names":["webpackJsonp","442","module","exports","__webpack_require__","get_dot_env","filepath","make_json_from_dot","fs","readFileSync","path","resolve","dot_env","split","map","trim","filter","line","length","isNotComment","reduce","add_dot_env_line_to_json","string","get_JSON","JSON","parse","json","env_variable","environment_parts","replace","slice","join","module_callee","parent","id","called_by_module","indexOf","parent_directory","readdirSync","forEach","file","env_getter","env","Object","keys","k","NODE_ENV","PUBLIC_URL","error","is_enoent","message","message_detail","msg","bold","greenBg","cyanBg","reset","console","warn","version","call","443","444","process","normalizeArray","parts","allowAboveRoot","up","i","last","splice","unshift","xs","f","res","push","splitPathRe","splitPath","filename","exec","resolvedPath","resolvedAbsolute","arguments","cwd","TypeError","charAt","p","normalize","isAbsolute","trailingSlash","substr","paths","Array","prototype","index","relative","from","to","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","result","root","dir","basename","ext","extname","str","len","445","_args","_development","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","type","registry","raw","name","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_spec","_where","author","email","url","bugs","contributors","description","devDependencies","decache","istanbul","pre-commit","tape","directories","lib","test","engines","node","homepage","inspired-by","issues","keywords","license","main","repository","scripts","check-coverage"],"mappings":"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","file":"static/js/0.d7b1694d.chunk.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 442:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {var fs   = __webpack_require__(443);\nvar path = __webpack_require__(444);\n\n/**\n * load_environment_variables_from_file does exactly what its name suggests\n * attempts to load a file containing a list of enviroment variables\n * @param {String} filepath - the path to your env.json or .env file\n * try/catch has a nice stack trace if we fail to find/load your the file\n */\nmodule.exports = function load_environment_variables_from_file (filepath) {\n  try { // first we determine how to find the env.json or config.env file\n    var module_callee    = module.parent.id;\n    var called_by_module = module_callee.indexOf('node_modules');\n    var parent_directory = module_callee.slice(0,called_by_module);\n    if(filepath) { // if required without a config.env file we search for one!\n      if(called_by_module > -1){\n        filepath = path.resolve(parent_directory, filepath);\n      }\n      else {\n        filepath = path.resolve(filepath);\n      }\n    }\n    else { // https://github.com/dwyl/env2/issues/6\n      var dir = fs.readdirSync(parent_directory); // list of files in dir\n      dir.forEach(function(file) {  // search for a .env file in dir\n        if(file.indexOf('.env') > -1) { // found a .env file? use it!\n          filepath = parent_directory + file;\n        }\n      })\n    }\n    var env_getter = filepath.indexOf('.env') !== -1 ? get_dot_env : get_JSON;\n    var env = env_getter(filepath);\n    Object.keys(env).forEach(function(k) {\n      if(!Object({\"NODE_ENV\":\"production\",\"PUBLIC_URL\":\"\"})[k]) { // allow enviroment to take precedence over env.json\n        Object({\"NODE_ENV\":\"production\",\"PUBLIC_URL\":\"\"})[k] = env[k]; // only set if not set by environment\n      }\n    });\n  }\n  catch (error) {\n    var is_enoent = error.message && error.message.indexOf('ENOENT') !== -1\n    var message_detail = is_enoent ? ' NOT FOUND! ' : ' INVALID JSON! '\n    // we're defining our own styles to avoid dependencies.\n    // if you are curious how this works see: github.com/chalk/ansi-styles\n    var reset    = '\\u001b[22m';\n    var bold     = '\\u001b[1m';\n    var cyanBg   = '\\u001b[46m' + '\\u001b[30m'; // Background Cyan Font Black\n    var greenBg  = '\\u001b[42m' + '\\u001b[30m'; // Background Green Font Black\n    var warning  = '\\u001b[43m' + '\\u001b[30m'; // Background Green Font Black\n    var endStyle = '\\u001b[49m' + '\\u001b[39m' + '\\u001b[22m'; // reset terminal\n\n    var msg = bold + warning + ' WARNING: ' + reset\n    msg    += greenBg + ' env2 was required to load an .env file: '\n    msg    += cyanBg + ' ' + filepath + ' ' + bold + warning + message_detail\n    msg    += reset + greenBg +' '\n    msg    += 'Please see: http://git.io/vG3UZ'+ endStyle\n\n    console.warn(msg);\n    return msg;\n  }\n};\n\nfunction get_dot_env (filepath) {\n  return make_json_from_dot(fs.readFileSync(path.resolve(filepath), 'utf8'));\n}\n\nfunction make_json_from_dot (dot_env) {\n  return dot_env.split('\\n')\n      .map(trim)\n      .filter(function(line){ return line.length; })\n      .filter(isNotComment)\n      .reduce(add_dot_env_line_to_json, {});\n}\n\nfunction trim (string) {\n  return string.trim();\n}\n\nfunction isNotComment (line) {\n  return line[0] !== '#';\n}\n\nfunction get_JSON (path) {\n  return JSON.parse(fs.readFileSync(path))\n}\n\nfunction add_dot_env_line_to_json (json, env_variable) {\n  var environment_parts = env_variable.replace('export','').split('=');\n  json[environment_parts[0].trim()] = environment_parts.slice(1).join('=').trim();\n  return json;\n}\n\nexports.version = __webpack_require__(445).version;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38)(module)))\n\n/***/ }),\n\n/***/ 443:\n/***/ (function(module, exports) {\n\n\n\n/***/ }),\n\n/***/ 444:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(164)))\n\n/***/ }),\n\n/***/ 445:\n/***/ (function(module, exports) {\n\nmodule.exports = {\"_args\":[[\"env2@2.2.0\",\"/home/haitham/Desktop/Israel_Housing\"]],\"_development\":true,\"_from\":\"env2@2.2.0\",\"_id\":\"env2@2.2.0\",\"_inBundle\":false,\"_integrity\":\"sha1-1GtC03Xi8lU/8O80wVPJBPplLfE=\",\"_location\":\"/env2\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"env2@2.2.0\",\"name\":\"env2\",\"escapedName\":\"env2\",\"rawSpec\":\"2.2.0\",\"saveSpec\":null,\"fetchSpec\":\"2.2.0\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/env2/-/env2-2.2.0.tgz\",\"_spec\":\"2.2.0\",\"_where\":\"/home/haitham/Desktop/Israel_Housing\",\"author\":{\"name\":\"Nelson\",\"email\":\"contact.nelsonic@gmail.com\",\"url\":\"http://www.dwyl.io\"},\"bugs\":{\"url\":\"https://github.com/dwyl/env2/issues\"},\"contributors\":[{\"name\":\"Rafe Kennedy\",\"email\":\"@rjmk <contact.rafe@gmail.com\"},{\"name\":\"Mina\",\"email\":\"@minaorangina\"}],\"description\":\"Environment Variable Loader\",\"devDependencies\":{\"decache\":\"^3.1.0\",\"istanbul\":\"^0.4.4\",\"pre-commit\":\"^1.1.3\",\"tape\":\"^4.6.0\"},\"directories\":{\"lib\":\"lib\",\"test\":\"test\"},\"engines\":{\"node\":\">= 0.10.0\"},\"homepage\":\"https://github.com/dwyl/env2#readme\",\"inspired-by\":\"https://github.com/dshaw/env (see: http://git.io/vOjWp)\",\"issues\":{\"url\":\"https://github.com/dwyl/env2/issues\"},\"keywords\":[\"env\",\"environment\",\"variables\",\"config\",\"file\",\"aws\",\"lambda\",\"webpack\",\"universal\"],\"license\":\"GPL-2.0\",\"main\":\"lib/env.js\",\"name\":\"env2\",\"pre-commit\":[\"check-coverage\"],\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/dwyl/env2.git\"},\"scripts\":{\"check-coverage\":\"istanbul cover tape ./test/*.js && istanbul check-coverage --statements 100 --functions 100 --lines 100 --branches 100\",\"test\":\"istanbul cover tape ./test/*.js\"},\"version\":\"2.2.0\"}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/0.d7b1694d.chunk.js","var fs   = require('fs');\nvar path = require('path');\n\n/**\n * load_environment_variables_from_file does exactly what its name suggests\n * attempts to load a file containing a list of enviroment variables\n * @param {String} filepath - the path to your env.json or .env file\n * try/catch has a nice stack trace if we fail to find/load your the file\n */\nmodule.exports = function load_environment_variables_from_file (filepath) {\n  try { // first we determine how to find the env.json or config.env file\n    var module_callee    = module.parent.id;\n    var called_by_module = module_callee.indexOf('node_modules');\n    var parent_directory = module_callee.slice(0,called_by_module);\n    if(filepath) { // if required without a config.env file we search for one!\n      if(called_by_module > -1){\n        filepath = path.resolve(parent_directory, filepath);\n      }\n      else {\n        filepath = path.resolve(filepath);\n      }\n    }\n    else { // https://github.com/dwyl/env2/issues/6\n      var dir = fs.readdirSync(parent_directory); // list of files in dir\n      dir.forEach(function(file) {  // search for a .env file in dir\n        if(file.indexOf('.env') > -1) { // found a .env file? use it!\n          filepath = parent_directory + file;\n        }\n      })\n    }\n    var env_getter = filepath.indexOf('.env') !== -1 ? get_dot_env : get_JSON;\n    var env = env_getter(filepath);\n    Object.keys(env).forEach(function(k) {\n      if(!process.env[k]) { // allow enviroment to take precedence over env.json\n        process.env[k] = env[k]; // only set if not set by environment\n      }\n    });\n  }\n  catch (error) {\n    var is_enoent = error.message && error.message.indexOf('ENOENT') !== -1\n    var message_detail = is_enoent ? ' NOT FOUND! ' : ' INVALID JSON! '\n    // we're defining our own styles to avoid dependencies.\n    // if you are curious how this works see: github.com/chalk/ansi-styles\n    var reset    = '\\u001b[22m';\n    var bold     = '\\u001b[1m';\n    var cyanBg   = '\\u001b[46m' + '\\u001b[30m'; // Background Cyan Font Black\n    var greenBg  = '\\u001b[42m' + '\\u001b[30m'; // Background Green Font Black\n    var warning  = '\\u001b[43m' + '\\u001b[30m'; // Background Green Font Black\n    var endStyle = '\\u001b[49m' + '\\u001b[39m' + '\\u001b[22m'; // reset terminal\n\n    var msg = bold + warning + ' WARNING: ' + reset\n    msg    += greenBg + ' env2 was required to load an .env file: '\n    msg    += cyanBg + ' ' + filepath + ' ' + bold + warning + message_detail\n    msg    += reset + greenBg +' '\n    msg    += 'Please see: http://git.io/vG3UZ'+ endStyle\n\n    console.warn(msg);\n    return msg;\n  }\n};\n\nfunction get_dot_env (filepath) {\n  return make_json_from_dot(fs.readFileSync(path.resolve(filepath), 'utf8'));\n}\n\nfunction make_json_from_dot (dot_env) {\n  return dot_env.split('\\n')\n      .map(trim)\n      .filter(function(line){ return line.length; })\n      .filter(isNotComment)\n      .reduce(add_dot_env_line_to_json, {});\n}\n\nfunction trim (string) {\n  return string.trim();\n}\n\nfunction isNotComment (line) {\n  return line[0] !== '#';\n}\n\nfunction get_JSON (path) {\n  return JSON.parse(fs.readFileSync(path))\n}\n\nfunction add_dot_env_line_to_json (json, env_variable) {\n  var environment_parts = env_variable.replace('export','').split('=');\n  json[environment_parts[0].trim()] = environment_parts.slice(1).join('=').trim();\n  return json;\n}\n\nexports.version = require('../package.json').version;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/env2/lib/env.js\n// module id = 442\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/path-browserify/index.js\n// module id = 444\n// module chunks = 0","module.exports = {\"_args\":[[\"env2@2.2.0\",\"/home/haitham/Desktop/Israel_Housing\"]],\"_development\":true,\"_from\":\"env2@2.2.0\",\"_id\":\"env2@2.2.0\",\"_inBundle\":false,\"_integrity\":\"sha1-1GtC03Xi8lU/8O80wVPJBPplLfE=\",\"_location\":\"/env2\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"env2@2.2.0\",\"name\":\"env2\",\"escapedName\":\"env2\",\"rawSpec\":\"2.2.0\",\"saveSpec\":null,\"fetchSpec\":\"2.2.0\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/env2/-/env2-2.2.0.tgz\",\"_spec\":\"2.2.0\",\"_where\":\"/home/haitham/Desktop/Israel_Housing\",\"author\":{\"name\":\"Nelson\",\"email\":\"contact.nelsonic@gmail.com\",\"url\":\"http://www.dwyl.io\"},\"bugs\":{\"url\":\"https://github.com/dwyl/env2/issues\"},\"contributors\":[{\"name\":\"Rafe Kennedy\",\"email\":\"@rjmk <contact.rafe@gmail.com\"},{\"name\":\"Mina\",\"email\":\"@minaorangina\"}],\"description\":\"Environment Variable Loader\",\"devDependencies\":{\"decache\":\"^3.1.0\",\"istanbul\":\"^0.4.4\",\"pre-commit\":\"^1.1.3\",\"tape\":\"^4.6.0\"},\"directories\":{\"lib\":\"lib\",\"test\":\"test\"},\"engines\":{\"node\":\">= 0.10.0\"},\"homepage\":\"https://github.com/dwyl/env2#readme\",\"inspired-by\":\"https://github.com/dshaw/env (see: http://git.io/vOjWp)\",\"issues\":{\"url\":\"https://github.com/dwyl/env2/issues\"},\"keywords\":[\"env\",\"environment\",\"variables\",\"config\",\"file\",\"aws\",\"lambda\",\"webpack\",\"universal\"],\"license\":\"GPL-2.0\",\"main\":\"lib/env.js\",\"name\":\"env2\",\"pre-commit\":[\"check-coverage\"],\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/dwyl/env2.git\"},\"scripts\":{\"check-coverage\":\"istanbul cover tape ./test/*.js && istanbul check-coverage --statements 100 --functions 100 --lines 100 --branches 100\",\"test\":\"istanbul cover tape ./test/*.js\"},\"version\":\"2.2.0\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/env2/package.json\n// module id = 445\n// module chunks = 0"],"sourceRoot":""}